### YamlMime:ManagedReference
items:
- uid: Fantas.Input.Controller
  commentId: T:Fantas.Input.Controller
  id: Controller
  parent: Fantas.Input
  children:
  - Fantas.Input.Controller.AnyButtonPressed
  - Fantas.Input.Controller.AnyButtonReleased
  - Fantas.Input.Controller.Connected
  - Fantas.Input.Controller.CurrentButtonsState
  - Fantas.Input.Controller.Disconnected
  - Fantas.Input.Controller.DisplayName
  - Fantas.Input.Controller.HasAButton
  - Fantas.Input.Controller.HasBButton
  - Fantas.Input.Controller.HasLeftShoulderButton
  - Fantas.Input.Controller.HasLeftThumbstick
  - Fantas.Input.Controller.HasLeftThumbstickButton
  - Fantas.Input.Controller.HasLeftTriggerButton
  - Fantas.Input.Controller.HasMenuButton
  - Fantas.Input.Controller.HasOptionsButton
  - Fantas.Input.Controller.HasRightShoulderButton
  - Fantas.Input.Controller.HasRightThumbstick
  - Fantas.Input.Controller.HasRightThumbstickButton
  - Fantas.Input.Controller.HasRightTriggerButton
  - Fantas.Input.Controller.HasXButton
  - Fantas.Input.Controller.HasYButton
  - Fantas.Input.Controller.Index
  - Fantas.Input.Controller.IsButtonDown(Fantas.Input.ControllerButtons)
  - Fantas.Input.Controller.IsButtonPressed(Fantas.Input.ControllerButtons)
  - Fantas.Input.Controller.IsButtonReleased(Fantas.Input.ControllerButtons)
  - Fantas.Input.Controller.IsButtonUp(Fantas.Input.ControllerButtons)
  - Fantas.Input.Controller.IsConnected
  - Fantas.Input.Controller.LeftThumbstickValue
  - Fantas.Input.Controller.LeftTriggerValue
  - Fantas.Input.Controller.RightThumbstickValue
  - Fantas.Input.Controller.RightTriggerValue
  - Fantas.Input.Controller.SetVibration(System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: Controller
  fullName: Fantas.Input.Controller
  type: Class
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Controller represent one physical GamePad attached to the system
  example: []
  syntax:
    content: public sealed class Controller
    content.vb: Public NotInheritable Class Controller
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Fantas.Input.Controller.IsButtonDown(Fantas.Input.ControllerButtons)
  commentId: M:Fantas.Input.Controller.IsButtonDown(Fantas.Input.ControllerButtons)
  id: IsButtonDown(Fantas.Input.ControllerButtons)
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: IsButtonDown(ControllerButtons)
  nameWithType: Controller.IsButtonDown(ControllerButtons)
  fullName: Fantas.Input.Controller.IsButtonDown(Fantas.Input.ControllerButtons)
  type: Method
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if the given button is current pressed
  example: []
  syntax:
    content: public bool IsButtonDown(ControllerButtons button)
    parameters:
    - id: button
      type: Fantas.Input.ControllerButtons
      description: Controller Button (A, B, X, Y, etc)
    return:
      type: System.Boolean
      description: Return true if the given button is current pressed
    content.vb: Public Function IsButtonDown(button As ControllerButtons) As Boolean
  overload: Fantas.Input.Controller.IsButtonDown*
- uid: Fantas.Input.Controller.IsButtonUp(Fantas.Input.ControllerButtons)
  commentId: M:Fantas.Input.Controller.IsButtonUp(Fantas.Input.ControllerButtons)
  id: IsButtonUp(Fantas.Input.ControllerButtons)
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: IsButtonUp(ControllerButtons)
  nameWithType: Controller.IsButtonUp(ControllerButtons)
  fullName: Fantas.Input.Controller.IsButtonUp(Fantas.Input.ControllerButtons)
  type: Method
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if the given button is current released
  example: []
  syntax:
    content: public bool IsButtonUp(ControllerButtons button)
    parameters:
    - id: button
      type: Fantas.Input.ControllerButtons
      description: Controller Button (A, B, X, Y, etc)
    return:
      type: System.Boolean
      description: Return true if the given button is current released
    content.vb: Public Function IsButtonUp(button As ControllerButtons) As Boolean
  overload: Fantas.Input.Controller.IsButtonUp*
- uid: Fantas.Input.Controller.IsButtonReleased(Fantas.Input.ControllerButtons)
  commentId: M:Fantas.Input.Controller.IsButtonReleased(Fantas.Input.ControllerButtons)
  id: IsButtonReleased(Fantas.Input.ControllerButtons)
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: IsButtonReleased(ControllerButtons)
  nameWithType: Controller.IsButtonReleased(ControllerButtons)
  fullName: Fantas.Input.Controller.IsButtonReleased(Fantas.Input.ControllerButtons)
  type: Method
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if the given button was just released
  example: []
  syntax:
    content: public bool IsButtonReleased(ControllerButtons button)
    parameters:
    - id: button
      type: Fantas.Input.ControllerButtons
      description: Controller Button (A, B, X, Y, etc)
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsButtonReleased(button As ControllerButtons) As Boolean
  overload: Fantas.Input.Controller.IsButtonReleased*
- uid: Fantas.Input.Controller.IsButtonPressed(Fantas.Input.ControllerButtons)
  commentId: M:Fantas.Input.Controller.IsButtonPressed(Fantas.Input.ControllerButtons)
  id: IsButtonPressed(Fantas.Input.ControllerButtons)
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: IsButtonPressed(ControllerButtons)
  nameWithType: Controller.IsButtonPressed(ControllerButtons)
  fullName: Fantas.Input.Controller.IsButtonPressed(Fantas.Input.ControllerButtons)
  type: Method
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if the given button was just pressed
  example: []
  syntax:
    content: public bool IsButtonPressed(ControllerButtons button)
    parameters:
    - id: button
      type: Fantas.Input.ControllerButtons
      description: Controller Button (A, B, X, Y, etc)
    return:
      type: System.Boolean
      description: Return true if the given button was just pressed
    content.vb: Public Function IsButtonPressed(button As ControllerButtons) As Boolean
  overload: Fantas.Input.Controller.IsButtonPressed*
- uid: Fantas.Input.Controller.SetVibration(System.Single,System.Single)
  commentId: M:Fantas.Input.Controller.SetVibration(System.Single,System.Single)
  id: SetVibration(System.Single,System.Single)
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: SetVibration(float, float)
  nameWithType: Controller.SetVibration(float, float)
  fullName: Fantas.Input.Controller.SetVibration(float, float)
  type: Method
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Vibrate the Controller (if available)
  example: []
  syntax:
    content: public void SetVibration(float leftMotor, float rightMotor)
    parameters:
    - id: leftMotor
      type: System.Single
      description: ''
    - id: rightMotor
      type: System.Single
      description: ''
    content.vb: Public Sub SetVibration(leftMotor As Single, rightMotor As Single)
  overload: Fantas.Input.Controller.SetVibration*
  nameWithType.vb: Controller.SetVibration(Single, Single)
  fullName.vb: Fantas.Input.Controller.SetVibration(Single, Single)
  name.vb: SetVibration(Single, Single)
- uid: Fantas.Input.Controller.DisplayName
  commentId: P:Fantas.Input.Controller.DisplayName
  id: DisplayName
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: Controller.DisplayName
  fullName: Fantas.Input.Controller.DisplayName
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Controller display name
  example: []
  syntax:
    content: public string DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayName As String
  overload: Fantas.Input.Controller.DisplayName*
- uid: Fantas.Input.Controller.IsConnected
  commentId: P:Fantas.Input.Controller.IsConnected
  id: IsConnected
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: Controller.IsConnected
  fullName: Fantas.Input.Controller.IsConnected
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the controller is connected
  example: []
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsConnected As Boolean
  overload: Fantas.Input.Controller.IsConnected*
- uid: Fantas.Input.Controller.Index
  commentId: P:Fantas.Input.Controller.Index
  id: Index
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Controller.Index
  fullName: Fantas.Input.Controller.Index
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Get controller index
  example: []
  syntax:
    content: public int Index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Index As Integer
  overload: Fantas.Input.Controller.Index*
- uid: Fantas.Input.Controller.HasYButton
  commentId: P:Fantas.Input.Controller.HasYButton
  id: HasYButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasYButton
  nameWithType: Controller.HasYButton
  fullName: Fantas.Input.Controller.HasYButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if has Y button
  example: []
  syntax:
    content: public bool HasYButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasYButton As Boolean
  overload: Fantas.Input.Controller.HasYButton*
- uid: Fantas.Input.Controller.HasXButton
  commentId: P:Fantas.Input.Controller.HasXButton
  id: HasXButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasXButton
  nameWithType: Controller.HasXButton
  fullName: Fantas.Input.Controller.HasXButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if has X button
  example: []
  syntax:
    content: public bool HasXButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasXButton As Boolean
  overload: Fantas.Input.Controller.HasXButton*
- uid: Fantas.Input.Controller.HasAButton
  commentId: P:Fantas.Input.Controller.HasAButton
  id: HasAButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasAButton
  nameWithType: Controller.HasAButton
  fullName: Fantas.Input.Controller.HasAButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if has A button
  example: []
  syntax:
    content: public bool HasAButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasAButton As Boolean
  overload: Fantas.Input.Controller.HasAButton*
- uid: Fantas.Input.Controller.HasBButton
  commentId: P:Fantas.Input.Controller.HasBButton
  id: HasBButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasBButton
  nameWithType: Controller.HasBButton
  fullName: Fantas.Input.Controller.HasBButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if has B button
  example: []
  syntax:
    content: public bool HasBButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasBButton As Boolean
  overload: Fantas.Input.Controller.HasBButton*
- uid: Fantas.Input.Controller.HasMenuButton
  commentId: P:Fantas.Input.Controller.HasMenuButton
  id: HasMenuButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasMenuButton
  nameWithType: Controller.HasMenuButton
  fullName: Fantas.Input.Controller.HasMenuButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has Menu/Start button
  example: []
  syntax:
    content: public bool HasMenuButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasMenuButton As Boolean
  overload: Fantas.Input.Controller.HasMenuButton*
- uid: Fantas.Input.Controller.HasOptionsButton
  commentId: P:Fantas.Input.Controller.HasOptionsButton
  id: HasOptionsButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasOptionsButton
  nameWithType: Controller.HasOptionsButton
  fullName: Fantas.Input.Controller.HasOptionsButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has Options/Back button
  example: []
  syntax:
    content: public bool HasOptionsButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasOptionsButton As Boolean
  overload: Fantas.Input.Controller.HasOptionsButton*
- uid: Fantas.Input.Controller.HasLeftShoulderButton
  commentId: P:Fantas.Input.Controller.HasLeftShoulderButton
  id: HasLeftShoulderButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasLeftShoulderButton
  nameWithType: Controller.HasLeftShoulderButton
  fullName: Fantas.Input.Controller.HasLeftShoulderButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has left shoulder button
  example: []
  syntax:
    content: public bool HasLeftShoulderButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasLeftShoulderButton As Boolean
  overload: Fantas.Input.Controller.HasLeftShoulderButton*
- uid: Fantas.Input.Controller.HasRightShoulderButton
  commentId: P:Fantas.Input.Controller.HasRightShoulderButton
  id: HasRightShoulderButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasRightShoulderButton
  nameWithType: Controller.HasRightShoulderButton
  fullName: Fantas.Input.Controller.HasRightShoulderButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game controller has right shoulder button
  example: []
  syntax:
    content: public bool HasRightShoulderButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasRightShoulderButton As Boolean
  overload: Fantas.Input.Controller.HasRightShoulderButton*
- uid: Fantas.Input.Controller.HasLeftThumbstickButton
  commentId: P:Fantas.Input.Controller.HasLeftThumbstickButton
  id: HasLeftThumbstickButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasLeftThumbstickButton
  nameWithType: Controller.HasLeftThumbstickButton
  fullName: Fantas.Input.Controller.HasLeftThumbstickButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has left thumbstick Button
  example: []
  syntax:
    content: public bool HasLeftThumbstickButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasLeftThumbstickButton As Boolean
  overload: Fantas.Input.Controller.HasLeftThumbstickButton*
- uid: Fantas.Input.Controller.HasRightThumbstickButton
  commentId: P:Fantas.Input.Controller.HasRightThumbstickButton
  id: HasRightThumbstickButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasRightThumbstickButton
  nameWithType: Controller.HasRightThumbstickButton
  fullName: Fantas.Input.Controller.HasRightThumbstickButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has Right Thumbstick button
  example: []
  syntax:
    content: public bool HasRightThumbstickButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasRightThumbstickButton As Boolean
  overload: Fantas.Input.Controller.HasRightThumbstickButton*
- uid: Fantas.Input.Controller.HasLeftTriggerButton
  commentId: P:Fantas.Input.Controller.HasLeftTriggerButton
  id: HasLeftTriggerButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasLeftTriggerButton
  nameWithType: Controller.HasLeftTriggerButton
  fullName: Fantas.Input.Controller.HasLeftTriggerButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has left trigger Button
  example: []
  syntax:
    content: public bool HasLeftTriggerButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasLeftTriggerButton As Boolean
  overload: Fantas.Input.Controller.HasLeftTriggerButton*
- uid: Fantas.Input.Controller.LeftTriggerValue
  commentId: P:Fantas.Input.Controller.LeftTriggerValue
  id: LeftTriggerValue
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: LeftTriggerValue
  nameWithType: Controller.LeftTriggerValue
  fullName: Fantas.Input.Controller.LeftTriggerValue
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Left trigger pressed value
  example: []
  syntax:
    content: public float LeftTriggerValue { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LeftTriggerValue As Single
  overload: Fantas.Input.Controller.LeftTriggerValue*
- uid: Fantas.Input.Controller.HasRightTriggerButton
  commentId: P:Fantas.Input.Controller.HasRightTriggerButton
  id: HasRightTriggerButton
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasRightTriggerButton
  nameWithType: Controller.HasRightTriggerButton
  fullName: Fantas.Input.Controller.HasRightTriggerButton
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has right trigger Button
  example: []
  syntax:
    content: public bool HasRightTriggerButton { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasRightTriggerButton As Boolean
  overload: Fantas.Input.Controller.HasRightTriggerButton*
- uid: Fantas.Input.Controller.RightTriggerValue
  commentId: P:Fantas.Input.Controller.RightTriggerValue
  id: RightTriggerValue
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: RightTriggerValue
  nameWithType: Controller.RightTriggerValue
  fullName: Fantas.Input.Controller.RightTriggerValue
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Right trigger value
  example: []
  syntax:
    content: public float RightTriggerValue { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property RightTriggerValue As Single
  overload: Fantas.Input.Controller.RightTriggerValue*
- uid: Fantas.Input.Controller.HasLeftThumbstick
  commentId: P:Fantas.Input.Controller.HasLeftThumbstick
  id: HasLeftThumbstick
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasLeftThumbstick
  nameWithType: Controller.HasLeftThumbstick
  fullName: Fantas.Input.Controller.HasLeftThumbstick
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has left thumbstick
  example: []
  syntax:
    content: public bool HasLeftThumbstick { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasLeftThumbstick As Boolean
  overload: Fantas.Input.Controller.HasLeftThumbstick*
- uid: Fantas.Input.Controller.LeftThumbstickValue
  commentId: P:Fantas.Input.Controller.LeftThumbstickValue
  id: LeftThumbstickValue
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: LeftThumbstickValue
  nameWithType: Controller.LeftThumbstickValue
  fullName: Fantas.Input.Controller.LeftThumbstickValue
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Left thumbstick position value
  example: []
  syntax:
    content: public Vector2 LeftThumbstickValue { get; }
    parameters: []
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Property LeftThumbstickValue As Vector2
  overload: Fantas.Input.Controller.LeftThumbstickValue*
- uid: Fantas.Input.Controller.HasRightThumbstick
  commentId: P:Fantas.Input.Controller.HasRightThumbstick
  id: HasRightThumbstick
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: HasRightThumbstick
  nameWithType: Controller.HasRightThumbstick
  fullName: Fantas.Input.Controller.HasRightThumbstick
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Check if the Game Controller has right thumbstick
  example: []
  syntax:
    content: public bool HasRightThumbstick { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasRightThumbstick As Boolean
  overload: Fantas.Input.Controller.HasRightThumbstick*
- uid: Fantas.Input.Controller.RightThumbstickValue
  commentId: P:Fantas.Input.Controller.RightThumbstickValue
  id: RightThumbstickValue
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: RightThumbstickValue
  nameWithType: Controller.RightThumbstickValue
  fullName: Fantas.Input.Controller.RightThumbstickValue
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Right thumbstick position value
  example: []
  syntax:
    content: public Vector2 RightThumbstickValue { get; }
    parameters: []
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Property RightThumbstickValue As Vector2
  overload: Fantas.Input.Controller.RightThumbstickValue*
- uid: Fantas.Input.Controller.CurrentButtonsState
  commentId: P:Fantas.Input.Controller.CurrentButtonsState
  id: CurrentButtonsState
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: CurrentButtonsState
  nameWithType: Controller.CurrentButtonsState
  fullName: Fantas.Input.Controller.CurrentButtonsState
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Get combined button states
  example: []
  syntax:
    content: public ControllerButtons CurrentButtonsState { get; }
    parameters: []
    return:
      type: Fantas.Input.ControllerButtons
    content.vb: Public ReadOnly Property CurrentButtonsState As ControllerButtons
  overload: Fantas.Input.Controller.CurrentButtonsState*
- uid: Fantas.Input.Controller.AnyButtonPressed
  commentId: P:Fantas.Input.Controller.AnyButtonPressed
  id: AnyButtonPressed
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: AnyButtonPressed
  nameWithType: Controller.AnyButtonPressed
  fullName: Fantas.Input.Controller.AnyButtonPressed
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if any controller button was just pressed
  example: []
  syntax:
    content: public bool AnyButtonPressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AnyButtonPressed As Boolean
  overload: Fantas.Input.Controller.AnyButtonPressed*
- uid: Fantas.Input.Controller.AnyButtonReleased
  commentId: P:Fantas.Input.Controller.AnyButtonReleased
  id: AnyButtonReleased
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: AnyButtonReleased
  nameWithType: Controller.AnyButtonReleased
  fullName: Fantas.Input.Controller.AnyButtonReleased
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Return true if any controller button was just released
  example: []
  syntax:
    content: public bool AnyButtonReleased { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AnyButtonReleased As Boolean
  overload: Fantas.Input.Controller.AnyButtonReleased*
- uid: Fantas.Input.Controller.Connected
  commentId: E:Fantas.Input.Controller.Connected
  id: Connected
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: Connected
  nameWithType: Controller.Connected
  fullName: Fantas.Input.Controller.Connected
  type: Event
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Notification when Controller is connected or disconnected.
  example: []
  syntax:
    content: public event EventHandler<ControllerChangedEventArgs> Connected
    return:
      type: System.EventHandler{Fantas.Input.ControllerChangedEventArgs}
    content.vb: Public Event Connected As EventHandler(Of ControllerChangedEventArgs)
- uid: Fantas.Input.Controller.Disconnected
  commentId: E:Fantas.Input.Controller.Disconnected
  id: Disconnected
  parent: Fantas.Input.Controller
  langs:
  - csharp
  - vb
  name: Disconnected
  nameWithType: Controller.Disconnected
  fullName: Fantas.Input.Controller.Disconnected
  type: Event
  source:
    href: https://github.com/codefoco/Fantas/blob/abce7e8aa6e9fdc67723eb603874de23806741c5/src/Input/Controller/Controller.cs
  assemblies:
  - Fantas
  namespace: Fantas.Input
  summary: Notification when Controller lost its connection
  example: []
  syntax:
    content: public event EventHandler<ControllerChangedEventArgs> Disconnected
    return:
      type: System.EventHandler{Fantas.Input.ControllerChangedEventArgs}
    content.vb: Public Event Disconnected As EventHandler(Of ControllerChangedEventArgs)
references:
- uid: Fantas.Input
  commentId: N:Fantas.Input
  isExternal: true
  href: Fantas.html
  name: Fantas.Input
  nameWithType: Fantas.Input
  fullName: Fantas.Input
  spec.csharp:
  - uid: Fantas
    name: Fantas
    isExternal: true
    href: Fantas.html
  - name: .
  - uid: Fantas.Input
    name: Input
    isExternal: true
    href: Fantas.Input.html
  spec.vb:
  - uid: Fantas
    name: Fantas
    isExternal: true
    href: Fantas.html
  - name: .
  - uid: Fantas.Input
    name: Input
    isExternal: true
    href: Fantas.Input.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantas.Input.Controller.IsButtonDown*
  commentId: Overload:Fantas.Input.Controller.IsButtonDown
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_IsButtonDown_Fantas_Input_ControllerButtons_
  name: IsButtonDown
  nameWithType: Controller.IsButtonDown
  fullName: Fantas.Input.Controller.IsButtonDown
- uid: Fantas.Input.ControllerButtons
  commentId: T:Fantas.Input.ControllerButtons
  parent: Fantas.Input
  isExternal: true
  href: Fantas.Input.ControllerButtons.html
  name: ControllerButtons
  nameWithType: ControllerButtons
  fullName: Fantas.Input.ControllerButtons
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantas.Input.Controller.IsButtonUp*
  commentId: Overload:Fantas.Input.Controller.IsButtonUp
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_IsButtonUp_Fantas_Input_ControllerButtons_
  name: IsButtonUp
  nameWithType: Controller.IsButtonUp
  fullName: Fantas.Input.Controller.IsButtonUp
- uid: Fantas.Input.Controller.IsButtonReleased*
  commentId: Overload:Fantas.Input.Controller.IsButtonReleased
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_IsButtonReleased_Fantas_Input_ControllerButtons_
  name: IsButtonReleased
  nameWithType: Controller.IsButtonReleased
  fullName: Fantas.Input.Controller.IsButtonReleased
- uid: Fantas.Input.Controller.IsButtonPressed*
  commentId: Overload:Fantas.Input.Controller.IsButtonPressed
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_IsButtonPressed_Fantas_Input_ControllerButtons_
  name: IsButtonPressed
  nameWithType: Controller.IsButtonPressed
  fullName: Fantas.Input.Controller.IsButtonPressed
- uid: Fantas.Input.Controller.SetVibration*
  commentId: Overload:Fantas.Input.Controller.SetVibration
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_SetVibration_System_Single_System_Single_
  name: SetVibration
  nameWithType: Controller.SetVibration
  fullName: Fantas.Input.Controller.SetVibration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Fantas.Input.Controller.DisplayName*
  commentId: Overload:Fantas.Input.Controller.DisplayName
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_DisplayName
  name: DisplayName
  nameWithType: Controller.DisplayName
  fullName: Fantas.Input.Controller.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Fantas.Input.Controller.IsConnected*
  commentId: Overload:Fantas.Input.Controller.IsConnected
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_IsConnected
  name: IsConnected
  nameWithType: Controller.IsConnected
  fullName: Fantas.Input.Controller.IsConnected
- uid: Fantas.Input.Controller.Index*
  commentId: Overload:Fantas.Input.Controller.Index
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_Index
  name: Index
  nameWithType: Controller.Index
  fullName: Fantas.Input.Controller.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Fantas.Input.Controller.HasYButton*
  commentId: Overload:Fantas.Input.Controller.HasYButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasYButton
  name: HasYButton
  nameWithType: Controller.HasYButton
  fullName: Fantas.Input.Controller.HasYButton
- uid: Fantas.Input.Controller.HasXButton*
  commentId: Overload:Fantas.Input.Controller.HasXButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasXButton
  name: HasXButton
  nameWithType: Controller.HasXButton
  fullName: Fantas.Input.Controller.HasXButton
- uid: Fantas.Input.Controller.HasAButton*
  commentId: Overload:Fantas.Input.Controller.HasAButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasAButton
  name: HasAButton
  nameWithType: Controller.HasAButton
  fullName: Fantas.Input.Controller.HasAButton
- uid: Fantas.Input.Controller.HasBButton*
  commentId: Overload:Fantas.Input.Controller.HasBButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasBButton
  name: HasBButton
  nameWithType: Controller.HasBButton
  fullName: Fantas.Input.Controller.HasBButton
- uid: Fantas.Input.Controller.HasMenuButton*
  commentId: Overload:Fantas.Input.Controller.HasMenuButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasMenuButton
  name: HasMenuButton
  nameWithType: Controller.HasMenuButton
  fullName: Fantas.Input.Controller.HasMenuButton
- uid: Fantas.Input.Controller.HasOptionsButton*
  commentId: Overload:Fantas.Input.Controller.HasOptionsButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasOptionsButton
  name: HasOptionsButton
  nameWithType: Controller.HasOptionsButton
  fullName: Fantas.Input.Controller.HasOptionsButton
- uid: Fantas.Input.Controller.HasLeftShoulderButton*
  commentId: Overload:Fantas.Input.Controller.HasLeftShoulderButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasLeftShoulderButton
  name: HasLeftShoulderButton
  nameWithType: Controller.HasLeftShoulderButton
  fullName: Fantas.Input.Controller.HasLeftShoulderButton
- uid: Fantas.Input.Controller.HasRightShoulderButton*
  commentId: Overload:Fantas.Input.Controller.HasRightShoulderButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasRightShoulderButton
  name: HasRightShoulderButton
  nameWithType: Controller.HasRightShoulderButton
  fullName: Fantas.Input.Controller.HasRightShoulderButton
- uid: Fantas.Input.Controller.HasLeftThumbstickButton*
  commentId: Overload:Fantas.Input.Controller.HasLeftThumbstickButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasLeftThumbstickButton
  name: HasLeftThumbstickButton
  nameWithType: Controller.HasLeftThumbstickButton
  fullName: Fantas.Input.Controller.HasLeftThumbstickButton
- uid: Fantas.Input.Controller.HasRightThumbstickButton*
  commentId: Overload:Fantas.Input.Controller.HasRightThumbstickButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasRightThumbstickButton
  name: HasRightThumbstickButton
  nameWithType: Controller.HasRightThumbstickButton
  fullName: Fantas.Input.Controller.HasRightThumbstickButton
- uid: Fantas.Input.Controller.HasLeftTriggerButton*
  commentId: Overload:Fantas.Input.Controller.HasLeftTriggerButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasLeftTriggerButton
  name: HasLeftTriggerButton
  nameWithType: Controller.HasLeftTriggerButton
  fullName: Fantas.Input.Controller.HasLeftTriggerButton
- uid: Fantas.Input.Controller.LeftTriggerValue*
  commentId: Overload:Fantas.Input.Controller.LeftTriggerValue
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_LeftTriggerValue
  name: LeftTriggerValue
  nameWithType: Controller.LeftTriggerValue
  fullName: Fantas.Input.Controller.LeftTriggerValue
- uid: Fantas.Input.Controller.HasRightTriggerButton*
  commentId: Overload:Fantas.Input.Controller.HasRightTriggerButton
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasRightTriggerButton
  name: HasRightTriggerButton
  nameWithType: Controller.HasRightTriggerButton
  fullName: Fantas.Input.Controller.HasRightTriggerButton
- uid: Fantas.Input.Controller.RightTriggerValue*
  commentId: Overload:Fantas.Input.Controller.RightTriggerValue
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_RightTriggerValue
  name: RightTriggerValue
  nameWithType: Controller.RightTriggerValue
  fullName: Fantas.Input.Controller.RightTriggerValue
- uid: Fantas.Input.Controller.HasLeftThumbstick*
  commentId: Overload:Fantas.Input.Controller.HasLeftThumbstick
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasLeftThumbstick
  name: HasLeftThumbstick
  nameWithType: Controller.HasLeftThumbstick
  fullName: Fantas.Input.Controller.HasLeftThumbstick
- uid: Fantas.Input.Controller.LeftThumbstickValue*
  commentId: Overload:Fantas.Input.Controller.LeftThumbstickValue
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_LeftThumbstickValue
  name: LeftThumbstickValue
  nameWithType: Controller.LeftThumbstickValue
  fullName: Fantas.Input.Controller.LeftThumbstickValue
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: Fantas.Input.Controller.HasRightThumbstick*
  commentId: Overload:Fantas.Input.Controller.HasRightThumbstick
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_HasRightThumbstick
  name: HasRightThumbstick
  nameWithType: Controller.HasRightThumbstick
  fullName: Fantas.Input.Controller.HasRightThumbstick
- uid: Fantas.Input.Controller.RightThumbstickValue*
  commentId: Overload:Fantas.Input.Controller.RightThumbstickValue
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_RightThumbstickValue
  name: RightThumbstickValue
  nameWithType: Controller.RightThumbstickValue
  fullName: Fantas.Input.Controller.RightThumbstickValue
- uid: Fantas.Input.Controller.CurrentButtonsState*
  commentId: Overload:Fantas.Input.Controller.CurrentButtonsState
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_CurrentButtonsState
  name: CurrentButtonsState
  nameWithType: Controller.CurrentButtonsState
  fullName: Fantas.Input.Controller.CurrentButtonsState
- uid: Fantas.Input.Controller.AnyButtonPressed*
  commentId: Overload:Fantas.Input.Controller.AnyButtonPressed
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_AnyButtonPressed
  name: AnyButtonPressed
  nameWithType: Controller.AnyButtonPressed
  fullName: Fantas.Input.Controller.AnyButtonPressed
- uid: Fantas.Input.Controller.AnyButtonReleased*
  commentId: Overload:Fantas.Input.Controller.AnyButtonReleased
  isExternal: true
  href: Fantas.Input.Controller.html#Fantas_Input_Controller_AnyButtonReleased
  name: AnyButtonReleased
  nameWithType: Controller.AnyButtonReleased
  fullName: Fantas.Input.Controller.AnyButtonReleased
- uid: System.EventHandler{Fantas.Input.ControllerChangedEventArgs}
  commentId: T:System.EventHandler{Fantas.Input.ControllerChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ControllerChangedEventArgs>
  nameWithType: EventHandler<ControllerChangedEventArgs>
  fullName: System.EventHandler<Fantas.Input.ControllerChangedEventArgs>
  nameWithType.vb: EventHandler(Of ControllerChangedEventArgs)
  fullName.vb: System.EventHandler(Of Fantas.Input.ControllerChangedEventArgs)
  name.vb: EventHandler(Of ControllerChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Fantas.Input.ControllerChangedEventArgs
    name: ControllerChangedEventArgs
    isExternal: true
    href: Fantas.Input.ControllerChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Fantas.Input.ControllerChangedEventArgs
    name: ControllerChangedEventArgs
    isExternal: true
    href: Fantas.Input.ControllerChangedEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
