### YamlMime:ManagedReference
items:
- uid: Fantas.Audio.AudioSession
  commentId: T:Fantas.Audio.AudioSession
  id: AudioSession
  parent: Fantas.Audio
  children:
  - Fantas.Audio.AudioSession.IsHeadsetConnected
  - Fantas.Audio.AudioSession.IsOtherAudioPlaying
  - Fantas.Audio.AudioSession.MusicVolume
  - Fantas.Audio.AudioSession.SoundEffectsVolume
  langs:
  - csharp
  - vb
  name: AudioSession
  nameWithType: AudioSession
  fullName: Fantas.Audio.AudioSession
  type: Class
  source:
    href: https://github.com/codefoco/Fantas/blob/505d983d64ecd91cc52e88237da8885e47073e31/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: >-
    Audio session class have helpers to

    query audio status in the system and

    set global values like MusicVolume
  example: []
  syntax:
    content: 'public static class AudioSession : Object'
    content.vb: Public Module AudioSession Inherits Object
  inheritance:
  - System.Object
- uid: Fantas.Audio.AudioSession.MusicVolume
  commentId: P:Fantas.Audio.AudioSession.MusicVolume
  id: MusicVolume
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: MusicVolume
  nameWithType: AudioSession.MusicVolume
  fullName: Fantas.Audio.AudioSession.MusicVolume
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/505d983d64ecd91cc52e88237da8885e47073e31/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: Control global music volume
  example: []
  syntax:
    content: public static float MusicVolume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property MusicVolume As Single
  overload: Fantas.Audio.AudioSession.MusicVolume*
- uid: Fantas.Audio.AudioSession.SoundEffectsVolume
  commentId: P:Fantas.Audio.AudioSession.SoundEffectsVolume
  id: SoundEffectsVolume
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: SoundEffectsVolume
  nameWithType: AudioSession.SoundEffectsVolume
  fullName: Fantas.Audio.AudioSession.SoundEffectsVolume
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/505d983d64ecd91cc52e88237da8885e47073e31/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: Control global sound effects volume
  example: []
  syntax:
    content: public static float SoundEffectsVolume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property SoundEffectsVolume As Single
  overload: Fantas.Audio.AudioSession.SoundEffectsVolume*
- uid: Fantas.Audio.AudioSession.IsOtherAudioPlaying
  commentId: P:Fantas.Audio.AudioSession.IsOtherAudioPlaying
  id: IsOtherAudioPlaying
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: IsOtherAudioPlaying
  nameWithType: AudioSession.IsOtherAudioPlaying
  fullName: Fantas.Audio.AudioSession.IsOtherAudioPlaying
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/505d983d64ecd91cc52e88237da8885e47073e31/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: >-
    Check if another audio music is already playing

    for instance if the user is listening to a music on another app

    (It's only implemented on iOS and Android)
  example: []
  syntax:
    content: public static bool IsOtherAudioPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsOtherAudioPlaying As Boolean
  overload: Fantas.Audio.AudioSession.IsOtherAudioPlaying*
- uid: Fantas.Audio.AudioSession.IsHeadsetConnected
  commentId: P:Fantas.Audio.AudioSession.IsHeadsetConnected
  id: IsHeadsetConnected
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: IsHeadsetConnected
  nameWithType: AudioSession.IsHeadsetConnected
  fullName: Fantas.Audio.AudioSession.IsHeadsetConnected
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/505d983d64ecd91cc52e88237da8885e47073e31/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: >-
    Check if headset is connected to device

    (It's only implemented on iOS and Android)
  example: []
  syntax:
    content: public static bool IsHeadsetConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsHeadsetConnected As Boolean
  overload: Fantas.Audio.AudioSession.IsHeadsetConnected*
references:
- uid: Fantas.Audio
  commentId: N:Fantas.Audio
  isExternal: true
  href: Fantas.html
  name: Fantas.Audio
  nameWithType: Fantas.Audio
  fullName: Fantas.Audio
  spec.csharp:
  - uid: Fantas
    name: Fantas
    isExternal: true
    href: Fantas.html
  - name: .
  - uid: Fantas.Audio
    name: Audio
    isExternal: true
    href: Fantas.Audio.html
  spec.vb:
  - uid: Fantas
    name: Fantas
    isExternal: true
    href: Fantas.html
  - name: .
  - uid: Fantas.Audio
    name: Audio
    isExternal: true
    href: Fantas.Audio.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantas.Audio.AudioSession.MusicVolume*
  commentId: Overload:Fantas.Audio.AudioSession.MusicVolume
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_MusicVolume
  name: MusicVolume
  nameWithType: AudioSession.MusicVolume
  fullName: Fantas.Audio.AudioSession.MusicVolume
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Fantas.Audio.AudioSession.SoundEffectsVolume*
  commentId: Overload:Fantas.Audio.AudioSession.SoundEffectsVolume
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_SoundEffectsVolume
  name: SoundEffectsVolume
  nameWithType: AudioSession.SoundEffectsVolume
  fullName: Fantas.Audio.AudioSession.SoundEffectsVolume
- uid: Fantas.Audio.AudioSession.IsOtherAudioPlaying*
  commentId: Overload:Fantas.Audio.AudioSession.IsOtherAudioPlaying
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_IsOtherAudioPlaying
  name: IsOtherAudioPlaying
  nameWithType: AudioSession.IsOtherAudioPlaying
  fullName: Fantas.Audio.AudioSession.IsOtherAudioPlaying
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantas.Audio.AudioSession.IsHeadsetConnected*
  commentId: Overload:Fantas.Audio.AudioSession.IsHeadsetConnected
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_IsHeadsetConnected
  name: IsHeadsetConnected
  nameWithType: AudioSession.IsHeadsetConnected
  fullName: Fantas.Audio.AudioSession.IsHeadsetConnected
