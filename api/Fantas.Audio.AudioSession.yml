### YamlMime:ManagedReference
items:
- uid: Fantas.Audio.AudioSession
  commentId: T:Fantas.Audio.AudioSession
  id: AudioSession
  parent: Fantas.Audio
  children:
  - Fantas.Audio.AudioSession.IsHeadsetConnected
  - Fantas.Audio.AudioSession.IsOtherAudioPlaying
  - Fantas.Audio.AudioSession.MusicVolume
  - Fantas.Audio.AudioSession.SoundEffectsVolume
  langs:
  - csharp
  - vb
  name: AudioSession
  nameWithType: AudioSession
  fullName: Fantas.Audio.AudioSession
  type: Class
  source:
    href: https://github.com/codefoco/Fantas/blob/181d70dd3b83f90647af5a47f09a4f5cd9c5ebc5/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: >-
    Audio session class have helpers to

    query audio status in the system and

    set global values like MusicVolume
  example: []
  syntax:
    content: public static class AudioSession
    content.vb: Public Module AudioSession
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: Fantas.Audio.AudioSession.MusicVolume
  commentId: P:Fantas.Audio.AudioSession.MusicVolume
  id: MusicVolume
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: MusicVolume
  nameWithType: AudioSession.MusicVolume
  fullName: Fantas.Audio.AudioSession.MusicVolume
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/181d70dd3b83f90647af5a47f09a4f5cd9c5ebc5/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: Control global music volume
  example: []
  syntax:
    content: public static float MusicVolume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property MusicVolume As Single
  overload: Fantas.Audio.AudioSession.MusicVolume*
- uid: Fantas.Audio.AudioSession.SoundEffectsVolume
  commentId: P:Fantas.Audio.AudioSession.SoundEffectsVolume
  id: SoundEffectsVolume
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: SoundEffectsVolume
  nameWithType: AudioSession.SoundEffectsVolume
  fullName: Fantas.Audio.AudioSession.SoundEffectsVolume
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/181d70dd3b83f90647af5a47f09a4f5cd9c5ebc5/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: Control global sound effects volume
  example: []
  syntax:
    content: public static float SoundEffectsVolume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property SoundEffectsVolume As Single
  overload: Fantas.Audio.AudioSession.SoundEffectsVolume*
- uid: Fantas.Audio.AudioSession.IsOtherAudioPlaying
  commentId: P:Fantas.Audio.AudioSession.IsOtherAudioPlaying
  id: IsOtherAudioPlaying
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: IsOtherAudioPlaying
  nameWithType: AudioSession.IsOtherAudioPlaying
  fullName: Fantas.Audio.AudioSession.IsOtherAudioPlaying
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/181d70dd3b83f90647af5a47f09a4f5cd9c5ebc5/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: >-
    Check if another audio music is already playing

    for instance if the user is listening to a music on another app

    (It's only implemented on iOS and Android)
  example: []
  syntax:
    content: public static bool IsOtherAudioPlaying { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsOtherAudioPlaying As Boolean
  overload: Fantas.Audio.AudioSession.IsOtherAudioPlaying*
- uid: Fantas.Audio.AudioSession.IsHeadsetConnected
  commentId: P:Fantas.Audio.AudioSession.IsHeadsetConnected
  id: IsHeadsetConnected
  parent: Fantas.Audio.AudioSession
  langs:
  - csharp
  - vb
  name: IsHeadsetConnected
  nameWithType: AudioSession.IsHeadsetConnected
  fullName: Fantas.Audio.AudioSession.IsHeadsetConnected
  type: Property
  source:
    href: https://github.com/codefoco/Fantas/blob/181d70dd3b83f90647af5a47f09a4f5cd9c5ebc5/src/Audio/AudioSession.cs
  assemblies:
  - Fantas
  namespace: Fantas.Audio
  summary: >-
    Check if headset is connected to device

    (It's only implemented on iOS and Android)
  example: []
  syntax:
    content: public static bool IsHeadsetConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsHeadsetConnected As Boolean
  overload: Fantas.Audio.AudioSession.IsHeadsetConnected*
references:
- uid: Fantas.Audio
  commentId: N:Fantas.Audio
  isExternal: true
  href: Fantas.html
  name: Fantas.Audio
  nameWithType: Fantas.Audio
  fullName: Fantas.Audio
  spec.csharp:
  - uid: Fantas
    name: Fantas
    isExternal: true
    href: Fantas.html
  - name: .
  - uid: Fantas.Audio
    name: Audio
    isExternal: true
    href: Fantas.Audio.html
  spec.vb:
  - uid: Fantas
    name: Fantas
    isExternal: true
    href: Fantas.html
  - name: .
  - uid: Fantas.Audio
    name: Audio
    isExternal: true
    href: Fantas.Audio.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantas.Audio.AudioSession.MusicVolume*
  commentId: Overload:Fantas.Audio.AudioSession.MusicVolume
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_MusicVolume
  name: MusicVolume
  nameWithType: AudioSession.MusicVolume
  fullName: Fantas.Audio.AudioSession.MusicVolume
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Fantas.Audio.AudioSession.SoundEffectsVolume*
  commentId: Overload:Fantas.Audio.AudioSession.SoundEffectsVolume
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_SoundEffectsVolume
  name: SoundEffectsVolume
  nameWithType: AudioSession.SoundEffectsVolume
  fullName: Fantas.Audio.AudioSession.SoundEffectsVolume
- uid: Fantas.Audio.AudioSession.IsOtherAudioPlaying*
  commentId: Overload:Fantas.Audio.AudioSession.IsOtherAudioPlaying
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_IsOtherAudioPlaying
  name: IsOtherAudioPlaying
  nameWithType: AudioSession.IsOtherAudioPlaying
  fullName: Fantas.Audio.AudioSession.IsOtherAudioPlaying
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantas.Audio.AudioSession.IsHeadsetConnected*
  commentId: Overload:Fantas.Audio.AudioSession.IsHeadsetConnected
  isExternal: true
  href: Fantas.Audio.AudioSession.html#Fantas_Audio_AudioSession_IsHeadsetConnected
  name: IsHeadsetConnected
  nameWithType: AudioSession.IsHeadsetConnected
  fullName: Fantas.Audio.AudioSession.IsHeadsetConnected
